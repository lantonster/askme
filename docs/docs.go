// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/askme/api/v1/user/email/verification": {
            "post": {
                "description": "邮箱验证",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "邮箱验证",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.VerifyEmailReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ResponseBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/schema.VerifyEmailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/askme/api/v1/user/register/email": {
            "post": {
                "description": "通过邮箱注册账号",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "通过邮箱注册账号",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.RegisterUserByEmailReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ResponseBody"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/schema.RegisterUserByEmailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "http code",
                    "type": "integer"
                },
                "data": {
                    "description": "response data"
                },
                "msg": {
                    "description": "response message",
                    "type": "string"
                },
                "reason": {
                    "description": "reason key",
                    "type": "string"
                }
            }
        },
        "schema.RegisterUserByEmailReq": {
            "type": "object",
            "required": [
                "e_mail",
                "name",
                "pass"
            ],
            "properties": {
                "e_mail": {
                    "description": "邮箱",
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "description": "用户名",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 2
                },
                "pass": {
                    "description": "密码",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                }
            }
        },
        "schema.RegisterUserByEmailRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "访问令牌",
                    "type": "string"
                },
                "avatar": {
                    "description": "头像",
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "integer"
                },
                "displayName": {
                    "description": "昵称",
                    "type": "string"
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ipInfo": {
                    "description": "IP 地址",
                    "type": "string"
                },
                "lastLoginDate": {
                    "description": "上次登录时间",
                    "type": "integer"
                },
                "mailStatus": {
                    "description": "邮箱状态",
                    "type": "string"
                },
                "password": {
                    "description": "密码",
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "role_id": {
                    "description": "角色 ID",
                    "type": "integer"
                },
                "status": {
                    "description": "用户状态",
                    "type": "string"
                },
                "suspendedAt": {
                    "description": "被禁用的时间",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "username": {
                    "description": "用户名",
                    "type": "string"
                },
                "visit_token": {
                    "description": "访问令牌",
                    "type": "string"
                }
            }
        },
        "schema.VerifyEmailReq": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "description": "验证码",
                    "type": "string",
                    "maxLength": 500
                }
            }
        },
        "schema.VerifyEmailRes": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "访问令牌",
                    "type": "string"
                },
                "avatar": {
                    "description": "头像",
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "integer"
                },
                "displayName": {
                    "description": "昵称",
                    "type": "string"
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ipInfo": {
                    "description": "IP 地址",
                    "type": "string"
                },
                "lastLoginDate": {
                    "description": "上次登录时间",
                    "type": "integer"
                },
                "mailStatus": {
                    "description": "邮箱状态",
                    "type": "string"
                },
                "password": {
                    "description": "密码",
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "role_id": {
                    "description": "角色 ID",
                    "type": "integer"
                },
                "status": {
                    "description": "用户状态",
                    "type": "string"
                },
                "suspendedAt": {
                    "description": "被禁用的时间",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "username": {
                    "description": "用户名",
                    "type": "string"
                },
                "visit_token": {
                    "description": "访问令牌",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
