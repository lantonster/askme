// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repo/email.go

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	model "github.com/lantonster/askme/internal/model"
)

// MockEmailRepo is a mock of EmailRepo interface.
type MockEmailRepo struct {
	ctrl     *gomock.Controller
	recorder *MockEmailRepoMockRecorder
}

// MockEmailRepoMockRecorder is the mock recorder for MockEmailRepo.
type MockEmailRepoMockRecorder struct {
	mock *MockEmailRepo
}

// NewMockEmailRepo creates a new mock instance.
func NewMockEmailRepo(ctrl *gomock.Controller) *MockEmailRepo {
	mock := &MockEmailRepo{ctrl: ctrl}
	mock.recorder = &MockEmailRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailRepo) EXPECT() *MockEmailRepoMockRecorder {
	return m.recorder
}

// StoreVerificationEmail mocks base method.
func (m *MockEmailRepo) StoreVerificationEmail(c context.Context, userId int64, code string, content *model.VerificationEmail, ttl time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreVerificationEmail", c, userId, code, content, ttl)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreVerificationEmail indicates an expected call of StoreVerificationEmail.
func (mr *MockEmailRepoMockRecorder) StoreVerificationEmail(c, userId, code, content, ttl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreVerificationEmail", reflect.TypeOf((*MockEmailRepo)(nil).StoreVerificationEmail), c, userId, code, content, ttl)
}

// VerifyCode mocks base method.
func (m *MockEmailRepo) VerifyCode(c context.Context, code string) (*model.VerificationEmail, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyCode", c, code)
	ret0, _ := ret[0].(*model.VerificationEmail)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// VerifyCode indicates an expected call of VerifyCode.
func (mr *MockEmailRepoMockRecorder) VerifyCode(c, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyCode", reflect.TypeOf((*MockEmailRepo)(nil).VerifyCode), c, code)
}
