// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repo/site_info.go

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/lantonster/askme/internal/model"
)

// MockSiteInfoRepo is a mock of SiteInfoRepo interface.
type MockSiteInfoRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSiteInfoRepoMockRecorder
}

// MockSiteInfoRepoMockRecorder is the mock recorder for MockSiteInfoRepo.
type MockSiteInfoRepoMockRecorder struct {
	mock *MockSiteInfoRepo
}

// NewMockSiteInfoRepo creates a new mock instance.
func NewMockSiteInfoRepo(ctrl *gomock.Controller) *MockSiteInfoRepo {
	mock := &MockSiteInfoRepo{ctrl: ctrl}
	mock.recorder = &MockSiteInfoRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSiteInfoRepo) EXPECT() *MockSiteInfoRepoMockRecorder {
	return m.recorder
}

// FirstSiteInfoByType mocks base method.
func (m *MockSiteInfoRepo) FirstSiteInfoByType(c context.Context, typ model.SiteInfoType) (*model.SiteInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FirstSiteInfoByType", c, typ)
	ret0, _ := ret[0].(*model.SiteInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FirstSiteInfoByType indicates an expected call of FirstSiteInfoByType.
func (mr *MockSiteInfoRepoMockRecorder) FirstSiteInfoByType(c, typ interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FirstSiteInfoByType", reflect.TypeOf((*MockSiteInfoRepo)(nil).FirstSiteInfoByType), c, typ)
}
