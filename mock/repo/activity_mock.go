// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repo/activity.go

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/lantonster/askme/internal/model"
)

// MockActivityRepo is a mock of ActivityRepo interface.
type MockActivityRepo struct {
	ctrl     *gomock.Controller
	recorder *MockActivityRepoMockRecorder
}

// MockActivityRepoMockRecorder is the mock recorder for MockActivityRepo.
type MockActivityRepoMockRecorder struct {
	mock *MockActivityRepo
}

// NewMockActivityRepo creates a new mock instance.
func NewMockActivityRepo(ctrl *gomock.Controller) *MockActivityRepo {
	mock := &MockActivityRepo{ctrl: ctrl}
	mock.recorder = &MockActivityRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActivityRepo) EXPECT() *MockActivityRepoMockRecorder {
	return m.recorder
}

// CreateActivity mocks base method.
func (m *MockActivityRepo) CreateActivity(c context.Context, activity *model.Activity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateActivity", c, activity)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateActivity indicates an expected call of CreateActivity.
func (mr *MockActivityRepoMockRecorder) CreateActivity(c, activity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateActivity", reflect.TypeOf((*MockActivityRepo)(nil).CreateActivity), c, activity)
}

// GetActivityByType mocks base method.
func (m *MockActivityRepo) GetActivityByType(c context.Context, typ string) (*model.Activity, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActivityByType", c, typ)
	ret0, _ := ret[0].(*model.Activity)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetActivityByType indicates an expected call of GetActivityByType.
func (mr *MockActivityRepoMockRecorder) GetActivityByType(c, typ interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActivityByType", reflect.TypeOf((*MockActivityRepo)(nil).GetActivityByType), c, typ)
}
